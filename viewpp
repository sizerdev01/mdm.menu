-- Script principal que usa a OrionLib carregada
local Players = game:GetService("Players")
local camera = game:GetService("Workspace").CurrentCamera

-- Acessa a OrionLib carregada via getgenv
local OrionLib = getgenv().OrionLib

local function viewPlayer(player)
    local character = player.Character or player.CharacterAdded:Wait()
    if character and character:FindFirstChild("Head") then
        camera.CameraSubject = character
        OrionLib:MakeNotification({
            Name = "Visão ativada",
            Content = "Você está agora vendo " .. player.Name,
            Time = 5
        })
    else
        OrionLib:MakeNotification({
            Name = "Erro",
            Content = "Não foi possível visualizar o jogador.",
            Time = 5
        })
    end
end

local function unviewPlayer()
    camera.CameraSubject = Players.LocalPlayer.Character -- Volta para o próprio jogador
    OrionLib:MakeNotification({
        Name = "Visão desativada",
        Content = "Você parou de ver o jogador.",
        Time = 5
    })
end

local Window = OrionLib:MakeWindow({Name = "by shakaSilentAim", HidePremium = false, SaveConfig = true, ConfigFolder = "FarmConfig"})

local ViewTab = Window:MakeTab({
    Name = "View Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local viewDropdown

local function updateViewPlayerList()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end

    if viewDropdown then
        viewDropdown:UpdateOptions(playerNames)  -- Atualiza as opções do dropdown
    else
        viewDropdown = ViewTab:AddDropdown({
            Name = "Selecione um jogador para visualizar",
            Default = "",  -- Valor padrão vazio
            Options = playerNames,
            Callback = function(selectedPlayerName)
                if selectedPlayerName ~= "" then
                    local player = Players:FindFirstChild(selectedPlayerName)
                    if player then
                        viewPlayer(player)
                    end
                end
            end
        })
    end
end

updateViewPlayerList()

Players.PlayerAdded:Connect(updateViewPlayerList)
Players.PlayerRemoving:Connect(updateViewPlayerList)

ViewTab:AddButton({
    Name = "Unview",
    Callback = function()
        unviewPlayer()
    end
})

OrionLib:Init()
