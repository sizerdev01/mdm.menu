local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "shaka do 7 acabano com o mc", HidePremium = false, SaveConfig = true, ConfigFolder = "FarmConfig"})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = game.Workspace.CurrentCamera -- A câmera do personagem

local lixosFolder = game.Workspace.MapaGeral.Gari.Lixos -- caminho pra a pasta dos LEXOS
local interactionKey = "E" 
local toggleKey = "Q" -- key farme
local interactionDuration = 3 -- gari

local isFarmActive = false -- Estado do farm inicialmente desativado
local isHighlightActive = false -- Estado do highlight inicialmente desativado
local isESPNameActive = false -- Estado do ESP Name inicialmente desativado
local nameSize = 27 -- Tamanho padrão do nome no ESP

-- Tabs
local FarmTab = Window:MakeTab({
    Name = "Gari",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local PVPTab = Window:MakeTab({
    Name = "PVP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Função para teleportar e interagir com os lixos
local function interactWithLexo(lexo)
    if not isFarmActive then
        return -- farm desativo faz nd
    end

    -- tp lixo
    humanoidRootPart.CFrame = lexo.CFrame + Vector3.new(0, 3, 0)
    lexo.CanCollide = false -- Desativa CanCollide
    print("Interagindo com LEXOS...")

    -- lixo cam
    local targetPosition = lexo.CFrame.Position + Vector3.new(0, 5, -10) -- Posição acima e atrás do LEXOS
    local lookAtPosition = lexo.CFrame.Position -- A câmera irá olhar para o LEXOS

    -- noclip
    camera.CameraType = Enum.CameraType.Scriptable
    camera.CFrame = CFrame.new(targetPosition, lookAtPosition) -- Ajusta a posição e rotação da câmera

    -- aperta a tecla "E" para interagir com os LEXOS
    for _ = 1, interactionDuration do
        game:GetService("VirtualInputManager"):SendKeyEvent(true, interactionKey, false, game)
        wait(1)
    end
    game:GetService("VirtualInputManager"):SendKeyEvent(false, interactionKey, false, game)

    -- retorna cam
    camera.CameraType = Enum.CameraType.Custom
end

-- Monitora e interage com os Lixos
local function monitorLixos()
    while true do
        if isFarmActive then
            for _, lexo in ipairs(lixosFolder:GetChildren()) do
                if lexo:IsA("BasePart") and lexo.CanCollide then
                    interactWithLexo(lexo)
                end
            end
        end
        wait(3) -- waitinggggg
    end
end

-- Alterna farm ativado e desativado
local function toggleFarm()
    isFarmActive = not isFarmActive
    if isFarmActive then
        print("Farm ativado")
    else
        print("Farm desativado")
    end
end

-- Função para aplicar o Highlight (ESP)
local players = game:GetService("Players")
local highlightColor = Color3.new(1, 0, 0) -- Vermelho
local fillTransparency = 1 -- Transparência da parte interna (1 = invisível)
local outlineTransparency = 0 -- Transparência do contorno

local function applyHighlight(character)
    if character:FindFirstChildOfClass("Highlight") then return end -- Evita duplicação
    local highlight = Instance.new("Highlight")
    highlight.FillColor = highlightColor
    highlight.FillTransparency = fillTransparency
    highlight.OutlineTransparency = outlineTransparency
    highlight.OutlineColor = highlightColor
    highlight.Adornee = character
    highlight.Parent = character
end

local function removeHighlight(character)
    local highlight = character:FindFirstChildOfClass("Highlight")
    if highlight then
        highlight:Destroy() -- Remove o Highlight
    end
end

local function monitorHighlight()
    while true do
        if isHighlightActive then
            for _, player in ipairs(players:GetPlayers()) do
                if player ~= players.LocalPlayer then
                    local character = player.Character or player.CharacterAdded:Wait()
                    applyHighlight(character)
                end
            end
        end
        wait(3)
    end
end

players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if isHighlightActive then
            applyHighlight(character)
        end
    end)
end)

-- Função para criar o ESP Name (NameTag)
local function createESPName(player)
    local character = player.Character or player.CharacterAdded:Wait()
    if character:FindFirstChild("ESPName") then return end -- Evita duplicação
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "ESPName"
    billboardGui.Adornee = character:WaitForChild("Head")
    billboardGui.Size = UDim2.new(27, 0, 2, 0) -- Tamanho do ESP
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true
    
    local nameLabel = Instance.new("TextLabel", billboardGui)
    nameLabel.Text = player.Name
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(1, 1, 1) -- Branco
    nameLabel.TextStrokeTransparency = 0.4 -- Contorno preto leve
    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- Preto
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.TextSize = nameSize -- Tamanho da fonte controlado pela slider
    nameLabel.TextScaled = false
    
    billboardGui.Parent = character
end

local function monitorESP()
    while true do
        if isESPNameActive then
            for _, player in ipairs(players:GetPlayers()) do
                if player ~= players.LocalPlayer then
                    local character = player.Character or player.CharacterAdded:Wait()
                    createESPName(player)
                end
            end
        end
        wait(3)
    end
end

players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if isESPNameActive then
            createESPName(player)
        end
    end)
end)

-- Toggle para ativar/desativar o farm
FarmTab:AddToggle({
    Name = "FarmBad",
    Default = false, -- Estado inicial desativado
    Callback = function(Value)
        isFarmActive = Value
        if isFarmActive then
            print("Farm ativado")
        else
            print("Farm desativado")
        end
    end
})

-- Toggle para ativar/desativar o Highlight (ESP)
PVPTab:AddToggle({
    Name = "Highlight Inimigos",
    Default = false, -- Estado inicial desativado
    Callback = function(Value)
        isHighlightActive = Value
        if isHighlightActive then
            spawn(monitorHighlight) -- Inicia o monitoramento se o Highlight for ativado
            print("Highlight ativado")
        else
            for _, player in ipairs(players:GetPlayers()) do
                local character = player.Character or player.CharacterAdded:Wait()
                removeHighlight(character) -- Remove o highlight de todos os jogadores
            end
            print("Highlight desativado")
        end
    end
})

-- Toggle para ativar/desativar o ESP Name (NameTag)
PVPTab:AddToggle({
    Name = "ESP Name",
    Default = false, -- Estado inicial desativado
    Callback = function(Value)
        isESPNameActive = Value
        if isESPNameActive then
            spawn(monitorESP) -- Inicia o monitoramento se o ESP Name for ativado
            print("ESP Name ativado")
        else
            for _, player in ipairs(players:GetPlayers()) do
                local character = player.Character or player.CharacterAdded:Wait()
                local espName = character:FindFirstChild("ESPName")
                if espName then
                    espName:Destroy() -- Remove o ESP Name de todos os jogadores
                end
            end
            print("ESP Name desativado")
        end
    end
})

-- Slider para ajustar o tamanho do nome no ESP
PVPTab:AddSlider({
    Name = "Name",
    Min = 10,
    Max = 33,
    Default = 27,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Tamanho",
    Callback = function(Value)
        nameSize = Value
        -- Atualiza o tamanho de todos os ESP Names existentes
        for _, player in ipairs(players:GetPlayers()) do
            local character = player.Character or player.CharacterAdded:Wait()
            local espName = character:FindFirstChild("ESPName")
            if espName then
                local nameLabel = espName:FindFirstChild("TextLabel")
                if nameLabel then
                    nameLabel.TextSize = nameSize
                end
            end
        end
        print("Tamanho do nome ajustado para: " .. nameSize)
    end
})

-- Rage Aim (Aimbot)
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false

_G.AimbotEnabled = true
_G.AimPart = "Head" -- aimbot mira
_G.Sensitivity = 0 -- smoth

_G.CircleSides = 64 -- lados circulow
_G.CircleColor = Color3.fromRGB(255, 255, 255) -- cor circ
_G.CircleTransparency = 0.7 -- transparencia circ
_G.CircleRadius = 80 -- raio do circulo/ fov
_G.CircleFilled = false -- circulo preenchido ou nao
_G.CircleVisible = false -- circulo visivel
_G.CircleThickness = 0 -- espressura

local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Filled = _G.CircleFilled
FOVCircle.Color = _G.CircleColor
FOVCircle.Visible = _G.CircleVisible
FOVCircle.Radius = _G.CircleRadius
FOVCircle.Transparency = _G.CircleTransparency
FOVCircle.NumSides = _G.CircleSides
FOVCircle.Thickness = _G.CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = _G.CircleRadius
    local Target = nil

    for _, v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Name then
            if v.Character ~= nil then
                if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                    if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                        local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                        local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                        
                        if VectorDistance < MaximumDistance then
                            Target = v
                        end
                    end
                end
            end
        end
    end

    return Target
end

UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    FOVCircle.Radius = _G.CircleRadius
    FOVCircle.Filled = _G.CircleFilled
    FOVCircle.Color = _G.CircleColor
    FOVCircle.Visible = _G.CircleVisible
    FOVCircle.Radius = _G.CircleRadius
    FOVCircle.Transparency = _G.CircleTransparency
    FOVCircle.NumSides = _G.CircleSides
    FOVCircle.Thickness = _G.CircleThickness

    if Holding == true and _G.AimbotEnabled == true then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer then
            local targetPosition = targetPlayer.Character[_G.AimPart].Position

            -- move a twenn
            TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)}):Play()
        end
    end
end)

-- Toggle Rage Aim
PVPTab:AddToggle({
    Name = "Rage Aim",
    Default = false, -- Estado inicial desativado
    Callback = function(Value)
        _G.AimbotEnabled = Value
        if _G.AimbotEnabled then
            print("Rage Aim ativado")
        else
            print("Rage Aim desativado")
        end
    end
})
-- rageaim + fov
   if _G.AimbotEnabled = true then
    _G.CircleVisible = true
else _G.AimbotEnabled = false
    _G.CircleVisible - false
end
-- Inicia o monitoramento do farm
spawn(monitorLixos)

-- Inicializa a biblioteca OrionLib
OrionLib:Init()
